G = {VT, VN, P, S}
S = lang
========

lang -> expr+
expr -> VAR ASSIGN_OP assign_expr
assign_expr -> value (OP value)*
value -> VAR|DIGIT
var_type -> LIST|HASH_SET

while_expr -> WHILE_KW wile_head while_body
while_head -> L_B while_logic_expr R_B
while_body -> L_SB expr+ R_SB
while_logic_expr -> value LOGIC_OP value

for_expr -> FOR_KW for_head for_body
for_head -> L_B for_logic_expr R_B
for_body -> L_SB expr+ R_SB

FOR_KW -> for
WHILE_KW -> while
VAR -> [a-z]+
DIGIT -> 0|([1-9][0-9]*)
ASSIGN_OP -> =
OP -> +|-|*|/
LOGIC_OP -> >|<



======

varName | varValue | scope
a           ?        main
a           ?        print_1

=======

func print(value) {
    a = size(value) // определение длины строки (функцию size описывать не будем)
    // что-то происходит, в итоге на консоль выводится отформатированное значение
}

print(a+b) -> ab+print

push (operand_stack, a) // operand_stack: a
push (operand_stack, b) // operand_stack: b, a

firstOperand = pop (operand_stack) // operand_stack: a
secondOperand = pop (operand_stack) // operand_stack:
process ('+', secondOperand, firstOperand) // operand_stack: a+b
// теперь в стеке операндов находится значение - результат суммы a и b = a+b
